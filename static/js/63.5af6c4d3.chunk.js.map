{"version":3,"file":"static/js/63.5af6c4d3.chunk.js","mappings":"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","sources":["redux/contacts/contacts.reducer.js","redux/contacts/contacts.selectors.js","pages/ContactsPage.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { instance } from 'redux/auth/auth.reducer';\n\nexport const fetchContactsThunk = createAsyncThunk(\n  'contacts/getAll',\n  async (_, thunkApi) => {\n    try {\n      const { data } = await instance.get('/contacts');\n\n      return data;\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const addContacThunk = createAsyncThunk(\n  'contacts/add',\n  async (formData, thunkApi) => {\n    try {\n      const { data } = await instance.post('/contacts', formData);\n\n      return data;\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const deleteContactThunk = createAsyncThunk(\n  'contacts/delete',\n  async (contactId, thunkApi) => {\n    try {\n      const { data } = await instance.delete(`/contacts/${contactId}`);\n      return data;\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  }\n);\n\nconst initialState = {\n  contacts: [],\n  isLoading: false,\n  error: null,\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  extraReducers: builder =>\n    builder\n      .addCase(fetchContactsThunk.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.contacts = payload;\n      })\n      .addCase(addContacThunk.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.contacts = [...state.contacts, payload];\n      })\n      .addCase(deleteContactThunk.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.contacts = state.contacts.filter(\n          contact => contact.id !== payload.id\n        );\n      })\n      .addMatcher(\n        isAnyOf(\n          fetchContactsThunk.pending,\n          addContacThunk.pending,\n          deleteContactThunk.pending\n        ),\n        state => {\n          state.isLoading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchContactsThunk.rejected,\n          addContacThunk.rejected,\n          deleteContactThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.isLoading = false;\n          state.error = payload;\n        }\n      ),\n});\n\nexport const contactsReducer = contactsSlice.reducer;\n","export const selectContacts = state => state.phonebook.contacts;\nexport const selectContactsIsLoading = state => state.phonebook.isLoading;\nexport const selectContactsError = state => state.phonebook.error;\n","import Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContacThunk,\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/contacts.reducer';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contacts/contacts.selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const onAddContact = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.contactName.value;\n    const number = event.currentTarget.elements.contactNumber.value;\n\n    const formData = {\n      name,\n      number,\n    };\n\n    dispatch(addContacThunk(formData))\n      .unwrap()\n      .then(() => event.target.reset());\n  };\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <div>\n      <form onSubmit={onAddContact}>\n        <h2>Add New Contact</h2>\n        <label>\n          <p>Name:</p>\n          <input\n            type=\"text\"\n            placeholder=\"Jacob Mercer\"\n            required\n            name=\"contactName\"\n          />\n        </label>\n        <label>\n          <p>Number:</p>\n          <input\n            type=\"text\"\n            placeholder=\"761-23-96\"\n            required\n            name=\"contactNumber\"\n            minLength={3}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">‚ú® Add</button>\n      </form>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      <ul>\n        {showContacts &&\n          contacts.map(({ id, name, number }) => {\n            return (\n              <li key={id}>\n                <h3>\n                  <span>{name}</span>\n                  <button\n                    disabled={isLoading}\n                    onClick={() => onDeleteContact(id)}\n                  >\n                    ü§∑‚Äç‚ôÇÔ∏è\n                  </button>\n                </h3>\n                <p>{number}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["fetchContactsThunk","createAsyncThunk","_","thunkApi","instance","data","rejectWithValue","message","addContacThunk","formData","deleteContactThunk","contactId","selectContacts","createSlice","name","initialState","contacts","isLoading","error","extraReducers","builder","addCase","fulfilled","state","payload","filter","contact","id","addMatcher","isAnyOf","pending","rejected","reducer","phonebook","selectContactsIsLoading","selectContactsError","dispatch","useDispatch","useSelector","useEffect","showContacts","Array","isArray","length","onSubmit","event","preventDefault","currentTarget","elements","contactName","value","number","contactNumber","unwrap","then","target","reset","type","placeholder","required","minLength","className","Loader","map","disabled","onClick"],"sourceRoot":""}