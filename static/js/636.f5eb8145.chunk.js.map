{"version":3,"file":"static/js/636.f5eb8145.chunk.js","mappings":"oOAAaA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,WAAnB,EACzBC,EAA6B,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAClCC,EAAyB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,E,SCmBrCC,GAAgBC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA6C3B,EA3CoB,WAAO,IAAD,IAChBC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASX,aAAV,aAAC,EAAgBe,YAAjB,QAAyB,KAC7CC,GAAWC,EAAAA,EAAAA,MAEXf,GAAcgB,EAAAA,EAAAA,IAAYnB,GAC1BK,GAAYc,EAAAA,EAAAA,IAAYf,GACxBG,GAAQY,EAAAA,EAAAA,IAAYb,GAO1B,OALAc,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,IAAiBX,IAC1BO,GAASK,EAAAA,EAAAA,MACV,GAAE,CAACZ,EAAQO,KAGV,4BACE,wBAAI,kBACJ,SAAC,KAAD,CAAMM,GAAIT,EAAYU,QAAtB,SAA+B,YACpB,OAAVjB,IAAkB,cAAGkB,UAAU,aAAb,SAA2BlB,IAC7CF,IAAa,SAACqB,EAAA,EAAD,IACG,OAAhBvB,IACC,4BACE,wBAAKA,EAAYwB,SACjB,0BAAI,WAASxB,EAAYyB,OACzB,0BAAOzB,EAAY0B,WAGvB,0BACE,SAAC,KAAD,CAASJ,UAAU,cAAcF,GAAG,WAApC,SAA+C,oBAIjD,SAAC,EAAAO,SAAD,CAAUC,UAAU,SAACL,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAOM,KAAK,WAAWC,SAAS,SAACzB,EAAD,YAKzC,C","sources":["redux/postDetails/postDetails.selector.js","pages/PostDetails.jsx"],"sourcesContent":["export const selectPostDetails = state => state.magazine.postDetails;\nexport const selectPostDetailsIsLoading = state => state.magazine.isLoading;\nexport const selectPostDetailsError = state => state.magazine.error;\n","import Loader from 'components/Loader/Loader';\nimport React, { lazy, Suspense, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport {\n  fetchContacts,\n  fetchPostDetails,\n} from 'redux/postDetails/postDetails.reducer';\nimport {\n  selectPostDetails,\n  selectPostDetailsError,\n  selectPostDetailsIsLoading,\n} from 'redux/postDetails/postDetails.selector';\n\nconst PostsComments = lazy(() => import('pages/PostsComments'));\n\nconst PostDetails = () => {\n  const { postId } = useParams();\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const dispatch = useDispatch();\n\n  const postDetails = useSelector(selectPostDetails);\n  const isLoading = useSelector(selectPostDetailsIsLoading);\n  const error = useSelector(selectPostDetailsError);\n\n  useEffect(() => {\n    dispatch(fetchPostDetails(postId));\n    dispatch(fetchContacts());\n  }, [postId, dispatch]);\n\n  return (\n    <div>\n      <h1>Post Details</h1>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {postDetails !== null && (\n        <div>\n          <h2>{postDetails.title}</h2>\n          <h3>PostId: {postDetails.id}</h3>\n          <code>{postDetails.body}</code>\n        </div>\n      )}\n      <div>\n        <NavLink className=\"header-link\" to=\"comments\">\n          Comments eee\n        </NavLink>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"comments\" element={<PostsComments />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default PostDetails;\n"],"names":["selectPostDetails","state","magazine","postDetails","selectPostDetailsIsLoading","isLoading","selectPostDetailsError","error","PostsComments","lazy","postId","useParams","location","useLocation","backLinkRef","useRef","from","dispatch","useDispatch","useSelector","useEffect","fetchPostDetails","fetchContacts","to","current","className","Loader","title","id","body","Suspense","fallback","path","element"],"sourceRoot":""}