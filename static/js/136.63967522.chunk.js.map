{"version":3,"file":"static/js/136.63967522.chunk.js","mappings":"gNAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,QAApB,EACtBC,EAA0B,SAAAH,GAAK,OAAIA,EAAMC,UAAUG,SAApB,EAC/BC,EAAsB,SAAAL,GAAK,OAAIA,EAAMC,UAAUK,KAApB,E,SC8FxC,EAlFqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACXN,GAAWO,EAAAA,EAAAA,IAAYV,GACvBK,GAAYK,EAAAA,EAAAA,IAAYN,GACxBG,GAAQG,EAAAA,EAAAA,IAAYJ,IAE1BK,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,MACV,GAAE,CAACJ,IAEJ,IAoBMK,EAAeC,MAAMC,QAAQZ,IAAaA,EAASa,OAAS,EAClE,OACE,4BACE,kBAAMC,SAvBW,SAAAC,GACnBA,EAAMC,iBAEN,IAGMC,EAAW,CACfC,KAJWH,EAAMI,cAAcC,SAASC,YAAYC,MAKpDC,OAJaR,EAAMI,cAAcC,SAASI,cAAcF,OAO1DjB,GAASoB,EAAAA,EAAAA,IAAeR,IACrBS,SACAC,MAAK,kBAAMZ,EAAMa,OAAOC,OAAnB,GACT,EASG,WACE,wBAAI,qBACJ,8BACE,uBAAG,WACH,kBACEC,KAAK,OACLC,YAAY,eACZC,UAAQ,EACRd,KAAK,oBAGT,8BACE,uBAAG,aACH,kBACEY,KAAK,OACLC,YAAY,YACZC,UAAQ,EACRd,KAAK,gBACLe,UAAW,QAGf,mBACA,mBAAQH,KAAK,SAAb,SAAsB,kBAEb,OAAV1B,IAAkB,cAAG8B,UAAU,aAAb,SAA2B9B,IAC7CF,IAAa,SAACiC,EAAA,EAAD,KACd,wBACGzB,GACCV,EAASoC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAInB,EAAmB,EAAnBA,KAAMK,EAAa,EAAbA,OACxB,OACE,2BACE,2BACE,0BAAOL,KACP,mBACEoB,SAAUpC,EACVqC,QAAS,kBA1CHC,EA0CyBH,OAzC/ChC,GAASoC,EAAAA,EAAAA,IAAmBD,IADN,IAAAA,CA0CG,EAFX,SAGC,uCAIH,uBAAIjB,MAVGc,EAaZ,QAIV,C","sources":["redux/contacts/contacts.selectors.js","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.phonebook.contacts;\nexport const selectContactsIsLoading = state => state.phonebook.isLoading;\nexport const selectContactsError = state => state.phonebook.error;\n","import Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContacThunk,\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/contacts.reducer';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contacts/contacts.selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const onAddContact = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.contactName.value;\n    const number = event.currentTarget.elements.contactNumber.value;\n\n    const formData = {\n      name,\n      number,\n    };\n\n    dispatch(addContacThunk(formData))\n      .unwrap()\n      .then(() => event.target.reset());\n  };\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <div>\n      <form onSubmit={onAddContact}>\n        <h2>Add New Contact</h2>\n        <label>\n          <p>Name:</p>\n          <input\n            type=\"text\"\n            placeholder=\"Jacob Mercer\"\n            required\n            name=\"contactName\"\n          />\n        </label>\n        <label>\n          <p>Number:</p>\n          <input\n            type=\"text\"\n            placeholder=\"761-23-96\"\n            required\n            name=\"contactNumber\"\n            minLength={3}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">‚ú® Add</button>\n      </form>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      <ul>\n        {showContacts &&\n          contacts.map(({ id, name, number }) => {\n            return (\n              <li key={id}>\n                <h3>\n                  <span>{name}</span>\n                  <button\n                    disabled={isLoading}\n                    onClick={() => onDeleteContact(id)}\n                  >\n                    ü§∑‚Äç‚ôÇÔ∏è\n                  </button>\n                </h3>\n                <p>{number}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","phonebook","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","dispatch","useDispatch","useSelector","useEffect","fetchContactsThunk","showContacts","Array","isArray","length","onSubmit","event","preventDefault","formData","name","currentTarget","elements","contactName","value","number","contactNumber","addContacThunk","unwrap","then","target","reset","type","placeholder","required","minLength","className","Loader","map","id","disabled","onClick","contactId","deleteContactThunk"],"sourceRoot":""}